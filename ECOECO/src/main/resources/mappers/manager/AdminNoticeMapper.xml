<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recycle.ecoeco.board.notice.model.dao.manager.AdminNoticeMapper">

    <resultMap type="com.recycle.ecoeco.board.notice.model.dto.NoticeDTO" id="noticeResultMap">
        <id property="noticeNo" column="noticeNo"/>
        <association property="writer" resultMap="userResultMap"/>
        <association property="image" resultMap="imageResultMap"/>
    </resultMap>

    <resultMap type="com.recycle.ecoeco.membership.model.dto.UserInfoDTO" id="userResultMap">
        <id property="userNo" column="userNo"/>
    </resultMap>

    <resultMap type="com.recycle.ecoeco.board.notice.model.dto.NoticeImageDTO" id="imageResultMap">
        <id property="noticeImgNo" column="noticeImgNo"/>
    </resultMap>

    <!-- 공지사항 조회 리스트 카운트 -->
    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
        COUNT(*)
        FROM
        NOTICE b
        JOIN
        USER_INFO u ON (b.userNo = u.userNo)
        <where>
            <if test="searchCondition == 'noticeCategory'">
                AND b.noticeCategory LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <if test="searchCondition == 'noticeTitle'">
                AND b.noticeTitle LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <if test="searchCondition == 'writer'">
                AND u.userName LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <!-- searchConditionDate에 따른 조건 -->
            <if test="searchConditionDate == 'noticeDate'">
                <choose>
                    <when test="searchDate1 != '' and searchDate1 != null and searchDate2 != '' and searchDate2 != null">
                        AND b.noticeDate BETWEEN #{ searchDate1 } AND #{ searchDate2 }
                    </when>
                    <when test="(searchDate1 != '' and searchDate1 != null and searchDate2 == '') or (searchDate1 != '' and searchDate1 != null and searchDate2 != null)">
                        AND <![CDATA[ b.noticeDate >= #{ searchDate1 } ]]>
                    </when>
                    <when test="(searchDate2 != '' and searchDate2 != null and searchDate1 == '') or (searchDate2 != '' and searchDate2 != null and searchDate1 != null)">
                        AND <![CDATA[ b.noticeDate <= #{ searchDate2 } ]]>
                    </when>
                </choose>
            </if>
            AND
            b.noticeStatus = 'Y'
        </where>
    </select>

    <!-- 공지사항 전체 목록 조회 -->
    <select id="selectNoticeList" resultMap="noticeResultMap">
        SELECT
        b.noticeNo,
        b.noticeCategory,
        b.noticeTitle,
        b.noticeDate,
        u.userName
        FROM
        NOTICE b
        JOIN
        USER_INFO u ON (b.userNo = u.userNo)
        <where>
            <if test="searchCondition == 'noticeCategory'">
                AND b.noticeCategory LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <if test="searchCondition == 'noticeTitle'">
                AND b.noticeTitle LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <if test="searchCondition == 'writer'">
                AND u.userName LIKE CONCAT('%', #{ searchValue }, '%')
            </if>
            <!-- searchConditionDate에 따른 조건 -->
            <if test="searchConditionDate == 'noticeDate'">
                <choose>
                    <when test="searchDate1 != '' and searchDate1 != null and searchDate2 != '' and searchDate2 != null">
                        AND b.noticeDate BETWEEN #{ searchDate1 } AND #{ searchDate2 }
                    </when>
                    <when test="(searchDate1 != '' and searchDate1 != null and searchDate2 == '') or (searchDate1 != '' and searchDate1 != null and searchDate2 != null)">
                        AND <![CDATA[ b.noticeDate >= #{ searchDate1 } ]]>
                    </when>
                    <when test="(searchDate2 != '' and searchDate2 != null and searchDate1 == '') or (searchDate2 != '' and searchDate2 != null and searchDate1 != null)">
                        AND <![CDATA[ b.noticeDate <= #{ searchDate2 } ]]>
                    </when>
                </choose>
            </if>
            AND
            b.noticeStatus = 'Y'
        </where>
        ORDER BY
        b.noticeNo DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 공지사항 상세 조회 -->
    <select id="selectNoticeDetail" resultMap="noticeResultMap">
        SELECT
        b.noticeNo,
        b.noticeCategory,
        b.noticeSubCategory,
        b.noticeTitle,
        b.noticeDate,
        b.noticeDetail,
        u.userName,
        i.noticeImgNo,
        i.noticeOriginFileName,
        i.noticeSaveName,
        i.noticePath
        FROM
        NOTICE b
        JOIN
        USER_INFO u ON (b.userNo = u.userNo)
        LEFT JOIN
        NOTICE_IMAGE i ON (b.noticeNo = i.noticeNo AND noticeImageStatus = 'Y')
        WHERE
        b.noticeNo = #{noticeNo}
        AND
        b.noticeStatus = 'Y'
    </select>

    <!-- 공지사항 이미지 등록 -->
    <insert id="insertNoticeImage">
        INSERT INTO NOTICE_IMAGE
        (noticeOriginFileName, noticeSaveName, noticePath, noticeNo)
        VALUES
        (#{ noticeOriginFileName }, #{ noticeSaveName }, #{ noticePath }, #{ noticeNo, jdbcType=VARCHAR })
    </insert>

    <!-- 공지사항 등록 -->
    <insert id="insertNotice">
        INSERT INTO NOTICE
        (noticeCategory, noticeSubCategory, noticeTitle, noticeDetail, noticeDate, userNo)
        VALUES
        (#{ noticeCategory }, #{ noticeSubCategory }, #{ noticeTitle }, #{ noticeDetail }, current_date(),
        #{ writer.userNo })
        <selectKey keyProperty="noticeNo" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 공지사항 삭제 -->
    <update id="deleteNotice">
        UPDATE
            Notice n
        JOIN
            Notice_Image ni ON (n.noticeNo = ni.noticeNo)
        SET
            n.noticeStatus = 'N',
            ni.noticeImageStatus = 'N'
        WHERE
            n.noticeNo = #{noticeNo}
    </update>

    <!-- 수정페이지에 저장된 값 출력 -->
    <select id="noticeModify" resultMap="noticeResultMap">
        SELECT
            b.noticeNo,
            b.noticeCategory,
            b.noticeSubCategory,
            b.noticeTitle,
            b.noticeDate,
            b.noticeDetail,
            u.userName,
            i.noticeImgNo,
            i.noticeOriginFileName,
            i.noticeSaveName,
            i.noticePath
        FROM
            NOTICE b
        JOIN
            USER_INFO u ON (b.userNo = u.userNo)
        LEFT JOIN
            NOTICE_IMAGE i ON (b.noticeNo = i.noticeNo AND noticeImageStatus = 'Y')
        WHERE
            b.noticeNo = #{noticeNo}
        AND
            b.noticeStatus = 'Y'
    </select>

    <!-- 공지사항 수정-->
    <update id="updateNotice">
        UPDATE
            NOTICE
        SET
            noticeCategory = #{ noticeCategory },
            noticeSubCategory = #{ noticeSubCategory },
            noticeTitle = #{ noticeTitle },
            noticeDate = #{ noticeDate },
            noticeDetail = #{ noticeDetail }
        WHERE
            noticeStatus = 'Y'
        AND
            noticeNo = #{ noticeNo }
    </update>

    <update id="updateNoticeImage">
        UPDATE
            NOTICE_IMAGE
        SET
            noticeOriginFileName = #{ noticeOriginFileName },
            noticeSaveName = #{ noticeSaveName },
            noticePath = #{ noticePath }
        WHERE
            noticeImageStatus = 'Y'
        AND
            noticeNo = #{ noticeNo }
    </update>
</mapper>